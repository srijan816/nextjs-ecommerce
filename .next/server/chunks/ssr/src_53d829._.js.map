{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/tikaram/Downloads/projects/Cline/ecommerce/src/lib/store/chatbot-store.ts"],"sourcesContent":["import { create } from 'zustand';\nimport { persist } from 'zustand/middleware';\n\ntype Message = {\n  role: 'user' | 'assistant';\n  content: string;\n};\n\ntype ChatbotState = {\n  isOpen: boolean;\n  messages: Message[];\n  unreadMessages: number;\n  isLoading: boolean;\n  setIsOpen: (isOpen: boolean) => void;\n  addMessage: (message: Message) => void;\n  setUnreadMessages: (count: number) => void;\n  incrementUnreadMessages: () => void;\n  setIsLoading: (isLoading: boolean) => void;\n  clearMessages: () => void;\n};\n\nexport const useChatbotStore = create<ChatbotState>()(\n  persist(\n    (set) => ({\n      isOpen: false,\n      messages: [],\n      unreadMessages: 0,\n      isLoading: false,\n      setIsOpen: (isOpen) => set((state) => ({ isOpen, unreadMessages: isOpen ? 0 : state.unreadMessages })),\n      addMessage: (message) => \n        set((state) => ({ \n          messages: [...state.messages, message],\n          unreadMessages: state.isOpen \n            ? 0 \n            : message.role === 'assistant' \n              ? state.unreadMessages + 1 \n              : state.unreadMessages\n        })),\n      setUnreadMessages: (count) => set({ unreadMessages: count }),\n      incrementUnreadMessages: () => \n        set((state) => ({ unreadMessages: state.unreadMessages + 1 })),\n      setIsLoading: (isLoading) => set({ isLoading }),\n      clearMessages: () => set({ messages: [] }),\n    }),\n    {\n      name: 'chatbot-storage',\n    }\n  )\n);\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAoBO,MAAM,kBAAkB,CAAA,GAAA,wIAAA,CAAA,SAAM,AAAD,IAClC,CAAA,GAAA,6IAAA,CAAA,UAAO,AAAD,EACJ,CAAC,MAAQ,CAAC;QACR,QAAQ;QACR,UAAU,EAAE;QACZ,gBAAgB;QAChB,WAAW;QACX,WAAW,CAAC,SAAW,IAAI,CAAC,QAAU,CAAC;oBAAE;oBAAQ,gBAAgB,SAAS,IAAI,MAAM,cAAc;gBAAC,CAAC;QACpG,YAAY,CAAC,UACX,IAAI,CAAC,QAAU,CAAC;oBACd,UAAU;2BAAI,MAAM,QAAQ;wBAAE;qBAAQ;oBACtC,gBAAgB,MAAM,MAAM,GACxB,IACA,QAAQ,IAAI,KAAK,cACf,MAAM,cAAc,GAAG,IACvB,MAAM,cAAc;gBAC5B,CAAC;QACH,mBAAmB,CAAC,QAAU,IAAI;gBAAE,gBAAgB;YAAM;QAC1D,yBAAyB,IACvB,IAAI,CAAC,QAAU,CAAC;oBAAE,gBAAgB,MAAM,cAAc,GAAG;gBAAE,CAAC;QAC9D,cAAc,CAAC,YAAc,IAAI;gBAAE;YAAU;QAC7C,eAAe,IAAM,IAAI;gBAAE,UAAU,EAAE;YAAC;IAC1C,CAAC,GACD;IACE,MAAM;AACR"}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":["file:///Users/tikaram/Downloads/projects/Cline/ecommerce/src/components/chatbot/chatbot-button.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect } from 'react';\nimport { FiMessageCircle } from 'react-icons/fi';\nimport { useChatbotStore } from '../../lib/store/chatbot-store';\n\nexport default function ChatbotButton() {\n  const { isOpen, setIsOpen, unreadMessages } = useChatbotStore();\n\n  // Handle keyboard shortcut (Cmd/Ctrl + /)\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if ((e.metaKey || e.ctrlKey) && e.key === '/') {\n        e.preventDefault();\n        setIsOpen(!isOpen);\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, setIsOpen]);\n\n  return (\n    <button\n      onClick={() => setIsOpen(true)}\n      className=\"fixed bottom-6 right-6 z-50 bg-blue-600 hover:bg-blue-700 text-white rounded-full p-4 shadow-lg transition-all duration-200 ease-in-out flex items-center justify-center\"\n      aria-label=\"Open customer support chat\"\n    >\n      <FiMessageCircle className=\"w-6 h-6\" />\n      {unreadMessages > 0 && (\n        <span className=\"absolute -top-2 -right-2 bg-red-500 text-white text-xs rounded-full w-6 h-6 flex items-center justify-center\">\n          {unreadMessages}\n        </span>\n      )}\n    </button>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAEA;AADA;AAHA;;;;;AAMe,SAAS;IACtB,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,cAAc,EAAE,GAAG,CAAA,GAAA,uIAAA,CAAA,kBAAe,AAAD;IAE5D,0CAA0C;IAC1C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,gBAAgB,CAAC;YACrB,IAAI,CAAC,EAAE,OAAO,IAAI,EAAE,OAAO,KAAK,EAAE,GAAG,KAAK,KAAK;gBAC7C,EAAE,cAAc;gBAChB,UAAU,CAAC;YACb;QACF;QAEA,OAAO,gBAAgB,CAAC,WAAW;QACnC,OAAO,IAAM,OAAO,mBAAmB,CAAC,WAAW;IACrD,GAAG;QAAC;QAAQ;KAAU;IAEtB,qBACE,8OAAC;QACC,SAAS,IAAM,UAAU;QACzB,WAAU;QACV,cAAW;;0BAEX,8OAAC,8IAAA,CAAA,kBAAe;gBAAC,WAAU;;;;;;YAC1B,iBAAiB,mBAChB,8OAAC;gBAAK,WAAU;0BACb;;;;;;;;;;;;AAKX"}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":["file:///Users/tikaram/Downloads/projects/Cline/ecommerce/src/components/chatbot/chatbot-dialog.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useRef, useEffect } from 'react';\nimport { FiSend, FiX } from 'react-icons/fi';\nimport { useChatbotStore } from '../../lib/store/chatbot-store';\n\ntype Message = {\n  role: 'user' | 'assistant';\n  content: string;\n};\n\nexport default function ChatbotDialog() {\n  const { \n    isOpen, \n    setIsOpen, \n    messages, \n    addMessage, \n    isLoading, \n    setIsLoading, \n    clearMessages \n  } = useChatbotStore();\n  \n  const [input, setInput] = useState('');\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  // Scroll to bottom of messages when new message is added\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [messages]);\n\n  // Handle sending a message\n  const handleSendMessage = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    if (!input.trim() || isLoading) return;\n    \n    // Add user message to chat\n    const userMessage: Message = { role: 'user', content: input };\n    addMessage(userMessage);\n    \n    // Clear input and set loading\n    setInput('');\n    setIsLoading(true);\n    \n    try {\n      // Send message to API\n      const response = await fetch('/api/chatbot', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ messages: [...messages, userMessage] }),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`Failed to get response from chatbot: ${response.status} ${response.statusText}`);\n      }\n      \n      const data = await response.json();\n      \n      // Add assistant response to chat\n      if (data && data.response) {\n        addMessage({ role: 'assistant', content: data.response });\n      } else {\n        throw new Error('Invalid response format from chatbot API');\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      addMessage({ \n        role: 'assistant', \n        content: \"Sorry, I'm having trouble connecting right now. Please try again later.\"\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed bottom-24 right-6 z-50 w-96 max-w-[calc(100vw-2rem)] h-[32rem] max-h-[calc(100vh-10rem)] bg-white rounded-lg shadow-xl flex flex-col overflow-hidden border border-gray-200\">\n      {/* Chat header */}\n      <div className=\"bg-blue-600 text-white px-4 py-3 flex justify-between items-center\">\n        <h3 className=\"font-medium\">Customer Support</h3>\n        <button \n          onClick={() => setIsOpen(false)}\n          className=\"text-white hover:text-gray-200 transition-colors\"\n          aria-label=\"Close chat\"\n        >\n          <FiX className=\"w-5 h-5\" />\n        </button>\n      </div>\n      \n      {/* Chat messages */}\n      <div className=\"flex-1 overflow-y-auto p-4 space-y-4\">\n        {messages.length === 0 ? (\n          <div className=\"text-center text-gray-500 py-8\">\n            <p>Welcome to customer support! How can I help you today?</p>\n          </div>\n        ) : (\n          messages.map((message, index) => (\n            <div \n              key={index} \n              className={`flex ${message.role === 'user' ? 'justify-end' : 'justify-start'}`}\n            >\n              <div className={`max-w-[75%] rounded-lg px-4 py-2 ${\n                message.role === 'user' \n                  ? 'bg-blue-600 text-white' \n                  : 'bg-gray-100 text-gray-800'\n              }`}>\n                <p className=\"whitespace-pre-wrap\">{message.content}</p>\n              </div>\n            </div>\n          ))\n        )}\n        \n        {isLoading && (\n          <div className=\"flex justify-start\">\n            <div className=\"bg-gray-100 rounded-lg px-4 py-2 max-w-[75%]\">\n              <div className=\"flex space-x-2 items-center\">\n                <div className=\"w-2 h-2 rounded-full bg-gray-400 animate-pulse\"></div>\n                <div className=\"w-2 h-2 rounded-full bg-gray-400 animate-pulse delay-75\"></div>\n                <div className=\"w-2 h-2 rounded-full bg-gray-400 animate-pulse delay-150\"></div>\n              </div>\n            </div>\n          </div>\n        )}\n        \n        <div ref={messagesEndRef} />\n      </div>\n      \n      {/* Chat input */}\n      <form onSubmit={handleSendMessage} className=\"border-t border-gray-200 p-4\">\n        <div className=\"flex items-center\">\n          <input\n            type=\"text\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder=\"Type your message...\"\n            className=\"flex-1 border border-gray-300 rounded-l-md px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-600\"\n          />\n          <button\n            type=\"submit\"\n            disabled={!input.trim() || isLoading}\n            className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-r-md transition-colors disabled:bg-blue-400\"\n          >\n            <FiSend className=\"w-5 h-5\" />\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 371, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}